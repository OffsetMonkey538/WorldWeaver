plugins {
    id 'java'
    id 'maven-publish'
    id 'idea'
    id 'eclipse'
    id 'fabric-loom' version "${loom_version}"
    id "com.modrinth.minotaur" version "2.+"
    id "com.matthewprenger.cursegradle" version "1.4.0"
}
archivesBaseName = project.archives_base_name
sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

def moduleDependencies(project, List<String> depNames) {
    def deps = depNames.iterator().collect { project.dependencies.project(path: ":$it", configuration: 'namedElements') }
    def clientOutputs = depNames.iterator().collect { findProject(":$it").sourceSets.client.output }

    project.dependencies {
        deps.each {
            api it
        }

        clientOutputs.each {
            clientImplementation it
        }
    }

    // As we manually handle the maven artifacts, we need to also manually specify the deps.
    project.publishing {
        publications {
            mavenJava(MavenPublication) {
                pom.withXml {
                    def depsNode = asNode().appendNode("dependencies")
                    deps.each {
                        def depNode = depsNode.appendNode("dependency")
                        depNode.appendNode("groupId", it.group)
                        depNode.appendNode("artifactId", it.name)
                        depNode.appendNode("version", it.version)
                        depNode.appendNode("scope", "compile")
                    }
                }
            }
        }
    }
}

def testDependencies(project, List<String> depNames) {
    def deps = depNames.iterator().collect { project.dependencies.project(path: ":$it", configuration: 'namedElements') }
    def clientOutputs = depNames.iterator().collect { findProject(":$it").sourceSets.client.output }

    project.dependencies {
        deps.each {
            testmodImplementation it
        }

        clientOutputs.each {
            testmodClientImplementation it
        }
    }
}

apply from: "common.gradle"
apply from: "helper.gradle"